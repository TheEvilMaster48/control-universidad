{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nlet EstudianteComponent = class EstudianteComponent {\n  constructor(estudianteService, router) {\n    this.estudianteService = estudianteService;\n    this.router = router;\n    this.estudiantes = [];\n    this.loading = false;\n    this.showForm = false;\n    this.editMode = false;\n    this.currentEstudiante = this.getEmptyEstudiante();\n    this.editId = null;\n    this.message = \"\";\n    this.messageType = \"\";\n  }\n  ngOnInit() {\n    this.loadEstudiantes();\n  }\n  getEmptyEstudiante() {\n    return {\n      nombre: \"\",\n      apellido: \"\",\n      correo: \"\",\n      codigoEstudiante: \"\",\n      carrera: \"\",\n      semestre: undefined,\n      promedio: undefined,\n      telefono: \"\",\n      direccion: \"\"\n    };\n  }\n  loadEstudiantes() {\n    this.loading = true;\n    this.estudianteService.getAll().subscribe({\n      next: data => {\n        this.estudiantes = data;\n        this.loading = false;\n      },\n      error: error => {\n        console.error(\"Error al cargar estudiantes:\", error);\n        this.showMessage(\"Error al cargar estudiantes\", \"error\");\n        this.loading = false;\n      }\n    });\n  }\n  showCreateForm() {\n    this.showForm = true;\n    this.editMode = false;\n    this.currentEstudiante = this.getEmptyEstudiante();\n    this.editId = null;\n  }\n  showEditForm(estudiante) {\n    this.showForm = true;\n    this.editMode = true;\n    this.editId = estudiante.id;\n    this.currentEstudiante = {\n      nombre: estudiante.nombre,\n      apellido: estudiante.apellido,\n      correo: estudiante.correo,\n      codigoEstudiante: estudiante.codigoEstudiante,\n      carrera: estudiante.carrera,\n      semestre: estudiante.semestre,\n      promedio: estudiante.promedio,\n      telefono: estudiante.telefono,\n      direccion: estudiante.direccion\n    };\n  }\n  hideForm() {\n    this.showForm = false;\n    this.editMode = false;\n    this.currentEstudiante = this.getEmptyEstudiante();\n    this.editId = null;\n  }\n  onSubmit() {\n    if (!this.isFormValid()) {\n      this.showMessage(\"Por favor complete todos los campos obligatorios\", \"error\");\n      return;\n    }\n    this.loading = true;\n    if (this.editMode && this.editId) {\n      this.estudianteService.update(this.editId, this.currentEstudiante).subscribe({\n        next: response => {\n          this.showMessage(\"Estudiante actualizado exitosamente\", \"success\");\n          this.loadEstudiantes();\n          this.hideForm();\n          this.loading = false;\n        },\n        error: error => {\n          console.error(\"Error al actualizar estudiante:\", error);\n          this.showMessage(\"Error al actualizar estudiante\", \"error\");\n          this.loading = false;\n        }\n      });\n    } else {\n      this.estudianteService.create(this.currentEstudiante).subscribe({\n        next: response => {\n          this.showMessage(\"Estudiante creado exitosamente\", \"success\");\n          this.loadEstudiantes();\n          this.hideForm();\n          this.loading = false;\n        },\n        error: error => {\n          console.error(\"Error al crear estudiante:\", error);\n          this.showMessage(\"Error al crear estudiante\", \"error\");\n          this.loading = false;\n        }\n      });\n    }\n  }\n  deleteEstudiante(id) {\n    if (confirm(\"¿Está seguro de que desea eliminar este estudiante?\")) {\n      this.loading = true;\n      this.estudianteService.delete(id).subscribe({\n        next: response => {\n          this.showMessage(\"Estudiante eliminado exitosamente\", \"success\");\n          this.loadEstudiantes();\n          this.loading = false;\n        },\n        error: error => {\n          console.error(\"Error al eliminar estudiante:\", error);\n          this.showMessage(\"Error al eliminar estudiante\", \"error\");\n          this.loading = false;\n        }\n      });\n    }\n  }\n  isFormValid() {\n    return !!(this.currentEstudiante.nombre && this.currentEstudiante.apellido && this.currentEstudiante.correo && this.currentEstudiante.codigoEstudiante && this.currentEstudiante.carrera);\n  }\n  showMessage(message, type) {\n    this.message = message;\n    this.messageType = type;\n    setTimeout(() => {\n      this.message = \"\";\n      this.messageType = \"\";\n    }, 5000);\n  }\n  goBack() {\n    this.router.navigate([\"/dashboard\"]);\n  }\n};\nEstudianteComponent = __decorate([Component({\n  selector: \"app-estudiante\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: \"./estudiante.component.html\",\n  styleUrls: [\"./estudiante.component.css\"]\n})], EstudianteComponent);\nexport { EstudianteComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","EstudianteComponent","constructor","estudianteService","router","estudiantes","loading","showForm","editMode","currentEstudiante","getEmptyEstudiante","editId","message","messageType","ngOnInit","loadEstudiantes","nombre","apellido","correo","codigoEstudiante","carrera","semestre","undefined","promedio","telefono","direccion","getAll","subscribe","next","data","error","console","showMessage","showCreateForm","showEditForm","estudiante","id","hideForm","onSubmit","isFormValid","update","response","create","deleteEstudiante","confirm","delete","type","setTimeout","goBack","navigate","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\SantiagoGamer\\Downloads\\frontend-universidad\\src\\app\\components\\estudiante\\estudiante.component.ts"],"sourcesContent":["import { Component, type OnInit } from \"@angular/core\"\nimport { CommonModule } from \"@angular/common\"\nimport { FormsModule } from \"@angular/forms\"\nimport type { Router } from \"@angular/router\"\nimport type { EstudianteService } from \"../../services/estudiante.service\"\nimport type { Estudiante, EstudianteRequest } from \"../../models/estudiante.model\"\n\n@Component({\n  selector: \"app-estudiante\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: \"./estudiante.component.html\",\n  styleUrls: [\"./estudiante.component.css\"],\n})\nexport class EstudianteComponent implements OnInit {\n  estudiantes: Estudiante[] = []\n  loading = false\n  showForm = false\n  editMode = false\n  currentEstudiante: EstudianteRequest = this.getEmptyEstudiante()\n  editId: number | null = null\n  message = \"\"\n  messageType = \"\"\n\n  constructor(\n    private estudianteService: EstudianteService,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.loadEstudiantes()\n  }\n\n  getEmptyEstudiante(): EstudianteRequest {\n    return {\n      nombre: \"\",\n      apellido: \"\",\n      correo: \"\",\n      codigoEstudiante: \"\",\n      carrera: \"\",\n      semestre: undefined,\n      promedio: undefined,\n      telefono: \"\",\n      direccion: \"\",\n    }\n  }\n\n  loadEstudiantes(): void {\n    this.loading = true\n    this.estudianteService.getAll().subscribe({\n      next: (data) => {\n        this.estudiantes = data\n        this.loading = false\n      },\n      error: (error) => {\n        console.error(\"Error al cargar estudiantes:\", error)\n        this.showMessage(\"Error al cargar estudiantes\", \"error\")\n        this.loading = false\n      },\n    })\n  }\n\n  showCreateForm(): void {\n    this.showForm = true\n    this.editMode = false\n    this.currentEstudiante = this.getEmptyEstudiante()\n    this.editId = null\n  }\n\n  showEditForm(estudiante: Estudiante): void {\n    this.showForm = true\n    this.editMode = true\n    this.editId = estudiante.id!\n    this.currentEstudiante = {\n      nombre: estudiante.nombre,\n      apellido: estudiante.apellido,\n      correo: estudiante.correo,\n      codigoEstudiante: estudiante.codigoEstudiante,\n      carrera: estudiante.carrera,\n      semestre: estudiante.semestre,\n      promedio: estudiante.promedio,\n      telefono: estudiante.telefono,\n      direccion: estudiante.direccion,\n    }\n  }\n\n  hideForm(): void {\n    this.showForm = false\n    this.editMode = false\n    this.currentEstudiante = this.getEmptyEstudiante()\n    this.editId = null\n  }\n\n  onSubmit(): void {\n    if (!this.isFormValid()) {\n      this.showMessage(\"Por favor complete todos los campos obligatorios\", \"error\")\n      return\n    }\n\n    this.loading = true\n\n    if (this.editMode && this.editId) {\n      this.estudianteService.update(this.editId, this.currentEstudiante).subscribe({\n        next: (response) => {\n          this.showMessage(\"Estudiante actualizado exitosamente\", \"success\")\n          this.loadEstudiantes()\n          this.hideForm()\n          this.loading = false\n        },\n        error: (error) => {\n          console.error(\"Error al actualizar estudiante:\", error)\n          this.showMessage(\"Error al actualizar estudiante\", \"error\")\n          this.loading = false\n        },\n      })\n    } else {\n      this.estudianteService.create(this.currentEstudiante).subscribe({\n        next: (response) => {\n          this.showMessage(\"Estudiante creado exitosamente\", \"success\")\n          this.loadEstudiantes()\n          this.hideForm()\n          this.loading = false\n        },\n        error: (error) => {\n          console.error(\"Error al crear estudiante:\", error)\n          this.showMessage(\"Error al crear estudiante\", \"error\")\n          this.loading = false\n        },\n      })\n    }\n  }\n\n  deleteEstudiante(id: number): void {\n    if (confirm(\"¿Está seguro de que desea eliminar este estudiante?\")) {\n      this.loading = true\n      this.estudianteService.delete(id).subscribe({\n        next: (response) => {\n          this.showMessage(\"Estudiante eliminado exitosamente\", \"success\")\n          this.loadEstudiantes()\n          this.loading = false\n        },\n        error: (error) => {\n          console.error(\"Error al eliminar estudiante:\", error)\n          this.showMessage(\"Error al eliminar estudiante\", \"error\")\n          this.loading = false\n        },\n      })\n    }\n  }\n\n  isFormValid(): boolean {\n    return !!(\n      this.currentEstudiante.nombre &&\n      this.currentEstudiante.apellido &&\n      this.currentEstudiante.correo &&\n      this.currentEstudiante.codigoEstudiante &&\n      this.currentEstudiante.carrera\n    )\n  }\n\n  showMessage(message: string, type: string): void {\n    this.message = message\n    this.messageType = type\n    setTimeout(() => {\n      this.message = \"\"\n      this.messageType = \"\"\n    }, 5000)\n  }\n\n  goBack(): void {\n    this.router.navigate([\"/dashboard\"])\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}