{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nlet AdminGuard = class AdminGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.authService.isAuthenticated() && this.authService.isAdmin()) {\n      return true;\n    } else {\n      this.router.navigate([\"/dashboard\"]);\n      return false;\n    }\n  }\n};\nAdminGuard = __decorate([Injectable({\n  providedIn: \"root\"\n})], AdminGuard);\nexport { AdminGuard };","map":{"version":3,"names":["Injectable","AdminGuard","constructor","authService","router","canActivate","isAuthenticated","isAdmin","navigate","__decorate","providedIn"],"sources":["C:\\Users\\SantiagoGamer\\Downloads\\frontend-universidad\\src\\app\\guards\\admin.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\nimport type { CanActivate, Router } from \"@angular/router\"\nimport type { AuthService } from \"../services/auth.service\"\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  canActivate(): boolean {\n    if (this.authService.isAuthenticated() && this.authService.isAdmin()) {\n      return true\n    } else {\n      this.router.navigate([\"/dashboard\"])\n      return false\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAOnC,IAAMC,UAAU,GAAhB,MAAMA,UAAU;EACrBC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACb;EAEHC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,WAAW,CAACG,eAAe,EAAE,IAAI,IAAI,CAACH,WAAW,CAACI,OAAO,EAAE,EAAE;MACpE,OAAO,IAAI;IACb,CAAC,MAAM;MACL,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACpC,OAAO,KAAK;IACd;EACF;CACD;AAdYP,UAAU,GAAAQ,UAAA,EAHtBT,UAAU,CAAC;EACVU,UAAU,EAAE;CACb,CAAC,C,EACWT,UAAU,CActB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}