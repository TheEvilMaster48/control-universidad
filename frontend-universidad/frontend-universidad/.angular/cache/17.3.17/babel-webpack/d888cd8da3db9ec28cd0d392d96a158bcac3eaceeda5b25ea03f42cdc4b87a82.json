{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nlet ProfesorComponent = class ProfesorComponent {\n  constructor(profesorService, router) {\n    this.profesorService = profesorService;\n    this.router = router;\n    this.profesores = [];\n    this.loading = false;\n    this.showForm = false;\n    this.editMode = false;\n    this.currentProfesor = this.getEmptyProfesor();\n    this.editId = null;\n    this.message = \"\";\n    this.messageType = \"\";\n  }\n  ngOnInit() {\n    this.loadProfesores();\n  }\n  getEmptyProfesor() {\n    return {\n      nombre: \"\",\n      apellido: \"\",\n      correo: \"\",\n      codigoProfesor: \"\",\n      especialidad: \"\",\n      departamento: \"\",\n      titulo: \"\",\n      telefono: \"\",\n      oficina: \"\",\n      horarioAtencion: \"\"\n    };\n  }\n  loadProfesores() {\n    this.loading = true;\n    this.profesorService.getAll().subscribe({\n      next: data => {\n        this.profesores = data;\n        this.loading = false;\n      },\n      error: error => {\n        console.error(\"Error al cargar profesores:\", error);\n        this.showMessage(\"Error al cargar profesores\", \"error\");\n        this.loading = false;\n      }\n    });\n  }\n  showCreateForm() {\n    this.showForm = true;\n    this.editMode = false;\n    this.currentProfesor = this.getEmptyProfesor();\n    this.editId = null;\n  }\n  showEditForm(profesor) {\n    this.showForm = true;\n    this.editMode = true;\n    this.editId = profesor.id;\n    this.currentProfesor = {\n      nombre: profesor.nombre,\n      apellido: profesor.apellido,\n      correo: profesor.correo,\n      codigoProfesor: profesor.codigoProfesor,\n      especialidad: profesor.especialidad,\n      departamento: profesor.departamento,\n      titulo: profesor.titulo,\n      telefono: profesor.telefono,\n      oficina: profesor.oficina,\n      horarioAtencion: profesor.horarioAtencion\n    };\n  }\n  hideForm() {\n    this.showForm = false;\n    this.editMode = false;\n    this.currentProfesor = this.getEmptyProfesor();\n    this.editId = null;\n  }\n  onSubmit() {\n    if (!this.isFormValid()) {\n      this.showMessage(\"Por favor complete todos los campos obligatorios\", \"error\");\n      return;\n    }\n    this.loading = true;\n    if (this.editMode && this.editId) {\n      this.profesorService.update(this.editId, this.currentProfesor).subscribe({\n        next: response => {\n          this.showMessage(\"Profesor actualizado exitosamente\", \"success\");\n          this.loadProfesores();\n          this.hideForm();\n          this.loading = false;\n        },\n        error: error => {\n          console.error(\"Error al actualizar profesor:\", error);\n          this.showMessage(\"Error al actualizar profesor\", \"error\");\n          this.loading = false;\n        }\n      });\n    } else {\n      this.profesorService.create(this.currentProfesor).subscribe({\n        next: response => {\n          this.showMessage(\"Profesor creado exitosamente\", \"success\");\n          this.loadProfesores();\n          this.hideForm();\n          this.loading = false;\n        },\n        error: error => {\n          console.error(\"Error al crear profesor:\", error);\n          this.showMessage(\"Error al crear profesor\", \"error\");\n          this.loading = false;\n        }\n      });\n    }\n  }\n  deleteProfesor(id) {\n    if (confirm(\"¿Está seguro de que desea eliminar este profesor?\")) {\n      this.loading = true;\n      this.profesorService.delete(id).subscribe({\n        next: response => {\n          this.showMessage(\"Profesor eliminado exitosamente\", \"success\");\n          this.loadProfesores();\n          this.loading = false;\n        },\n        error: error => {\n          console.error(\"Error al eliminar profesor:\", error);\n          this.showMessage(\"Error al eliminar profesor\", \"error\");\n          this.loading = false;\n        }\n      });\n    }\n  }\n  isFormValid() {\n    return !!(this.currentProfesor.nombre && this.currentProfesor.apellido && this.currentProfesor.correo && this.currentProfesor.codigoProfesor && this.currentProfesor.especialidad && this.currentProfesor.departamento);\n  }\n  showMessage(message, type) {\n    this.message = message;\n    this.messageType = type;\n    setTimeout(() => {\n      this.message = \"\";\n      this.messageType = \"\";\n    }, 5000);\n  }\n  goBack() {\n    this.router.navigate([\"/dashboard\"]);\n  }\n};\nProfesorComponent = __decorate([Component({\n  selector: \"app-profesor\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: \"./profesor.component.html\",\n  styleUrls: [\"./profesor.component.css\"]\n})], ProfesorComponent);\nexport { ProfesorComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","ProfesorComponent","constructor","profesorService","router","profesores","loading","showForm","editMode","currentProfesor","getEmptyProfesor","editId","message","messageType","ngOnInit","loadProfesores","nombre","apellido","correo","codigoProfesor","especialidad","departamento","titulo","telefono","oficina","horarioAtencion","getAll","subscribe","next","data","error","console","showMessage","showCreateForm","showEditForm","profesor","id","hideForm","onSubmit","isFormValid","update","response","create","deleteProfesor","confirm","delete","type","setTimeout","goBack","navigate","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\SantiagoGamer\\Downloads\\frontend-universidad\\src\\app\\components\\profesor\\profesor.component.ts"],"sourcesContent":["import { Component, type OnInit } from \"@angular/core\"\nimport { CommonModule } from \"@angular/common\"\nimport { FormsModule } from \"@angular/forms\"\nimport type { Router } from \"@angular/router\"\nimport type { ProfesorService } from \"../../services/profesor.service\"\nimport type { Profesor, ProfesorRequest } from \"../../models/profesor.model\"\n\n@Component({\n  selector: \"app-profesor\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: \"./profesor.component.html\",\n  styleUrls: [\"./profesor.component.css\"],\n})\nexport class ProfesorComponent implements OnInit {\n  profesores: Profesor[] = []\n  loading = false\n  showForm = false\n  editMode = false\n  currentProfesor: ProfesorRequest = this.getEmptyProfesor()\n  editId: number | null = null\n  message = \"\"\n  messageType = \"\"\n\n  constructor(\n    private profesorService: ProfesorService,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.loadProfesores()\n  }\n\n  getEmptyProfesor(): ProfesorRequest {\n    return {\n      nombre: \"\",\n      apellido: \"\",\n      correo: \"\",\n      codigoProfesor: \"\",\n      especialidad: \"\",\n      departamento: \"\",\n      titulo: \"\",\n      telefono: \"\",\n      oficina: \"\",\n      horarioAtencion: \"\",\n    }\n  }\n\n  loadProfesores(): void {\n    this.loading = true\n    this.profesorService.getAll().subscribe({\n      next: (data) => {\n        this.profesores = data\n        this.loading = false\n      },\n      error: (error) => {\n        console.error(\"Error al cargar profesores:\", error)\n        this.showMessage(\"Error al cargar profesores\", \"error\")\n        this.loading = false\n      },\n    })\n  }\n\n  showCreateForm(): void {\n    this.showForm = true\n    this.editMode = false\n    this.currentProfesor = this.getEmptyProfesor()\n    this.editId = null\n  }\n\n  showEditForm(profesor: Profesor): void {\n    this.showForm = true\n    this.editMode = true\n    this.editId = profesor.id!\n    this.currentProfesor = {\n      nombre: profesor.nombre,\n      apellido: profesor.apellido,\n      correo: profesor.correo,\n      codigoProfesor: profesor.codigoProfesor,\n      especialidad: profesor.especialidad,\n      departamento: profesor.departamento,\n      titulo: profesor.titulo,\n      telefono: profesor.telefono,\n      oficina: profesor.oficina,\n      horarioAtencion: profesor.horarioAtencion,\n    }\n  }\n\n  hideForm(): void {\n    this.showForm = false\n    this.editMode = false\n    this.currentProfesor = this.getEmptyProfesor()\n    this.editId = null\n  }\n\n  onSubmit(): void {\n    if (!this.isFormValid()) {\n      this.showMessage(\"Por favor complete todos los campos obligatorios\", \"error\")\n      return\n    }\n\n    this.loading = true\n\n    if (this.editMode && this.editId) {\n      this.profesorService.update(this.editId, this.currentProfesor).subscribe({\n        next: (response) => {\n          this.showMessage(\"Profesor actualizado exitosamente\", \"success\")\n          this.loadProfesores()\n          this.hideForm()\n          this.loading = false\n        },\n        error: (error) => {\n          console.error(\"Error al actualizar profesor:\", error)\n          this.showMessage(\"Error al actualizar profesor\", \"error\")\n          this.loading = false\n        },\n      })\n    } else {\n      this.profesorService.create(this.currentProfesor).subscribe({\n        next: (response) => {\n          this.showMessage(\"Profesor creado exitosamente\", \"success\")\n          this.loadProfesores()\n          this.hideForm()\n          this.loading = false\n        },\n        error: (error) => {\n          console.error(\"Error al crear profesor:\", error)\n          this.showMessage(\"Error al crear profesor\", \"error\")\n          this.loading = false\n        },\n      })\n    }\n  }\n\n  deleteProfesor(id: number): void {\n    if (confirm(\"¿Está seguro de que desea eliminar este profesor?\")) {\n      this.loading = true\n      this.profesorService.delete(id).subscribe({\n        next: (response) => {\n          this.showMessage(\"Profesor eliminado exitosamente\", \"success\")\n          this.loadProfesores()\n          this.loading = false\n        },\n        error: (error) => {\n          console.error(\"Error al eliminar profesor:\", error)\n          this.showMessage(\"Error al eliminar profesor\", \"error\")\n          this.loading = false\n        },\n      })\n    }\n  }\n\n  isFormValid(): boolean {\n    return !!(\n      this.currentProfesor.nombre &&\n      this.currentProfesor.apellido &&\n      this.currentProfesor.correo &&\n      this.currentProfesor.codigoProfesor &&\n      this.currentProfesor.especialidad &&\n      this.currentProfesor.departamento\n    )\n  }\n\n  showMessage(message: string, type: string): void {\n    this.message = message\n    this.messageType = type\n    setTimeout(() => {\n      this.message = \"\"\n      this.messageType = \"\"\n    }, 5000)\n  }\n\n  goBack(): void {\n    this.router.navigate([\"/dashboard\"])\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}