{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"http://localhost:8080/auth\";\n    this.currentUserSubject = new BehaviorSubject(null);\n    this.currentUser$ = this.currentUserSubject.asObservable();\n    this.loadCurrentUser();\n  }\n  login(credentials) {\n    return this.http.post(`${this.apiUrl}/signin`, credentials).pipe(tap(response => {\n      localStorage.setItem(\"token\", response.token);\n      localStorage.setItem(\"user\", JSON.stringify({\n        usuario: response.usuario,\n        email: response.email,\n        role: response.role\n      }));\n      this.currentUserSubject.next({\n        usuario: response.usuario,\n        email: response.email,\n        role: response.role\n      });\n    }));\n  }\n  register(userData) {\n    return this.http.post(`${this.apiUrl}/signup`, userData);\n  }\n  logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    this.currentUserSubject.next(null);\n  }\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n  isAdmin() {\n    const user = this.getCurrentUser();\n    return user && user.role === \"ADMIN\";\n  }\n  getCurrentUser() {\n    return this.currentUserSubject.value;\n  }\n  loadCurrentUser() {\n    const userStr = localStorage.getItem(\"user\");\n    if (userStr) {\n      this.currentUserSubject.next(JSON.parse(userStr));\n    }\n  }\n  getAuthHeaders() {\n    const token = this.getToken();\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: \"root\"\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","tap","AuthService","constructor","http","apiUrl","currentUserSubject","currentUser$","asObservable","loadCurrentUser","login","credentials","post","pipe","response","localStorage","setItem","token","JSON","stringify","usuario","email","role","next","register","userData","logout","removeItem","getToken","getItem","isAuthenticated","isAdmin","user","getCurrentUser","value","userStr","parse","getAuthHeaders","Authorization","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SantiagoGamer\\Downloads\\frontend-universidad\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\nimport { HttpClient } from \"@angular/common/http\"\nimport { type Observable, BehaviorSubject } from \"rxjs\"\nimport { tap } from \"rxjs/operators\"\nimport type { LoginRequest, LoginResponse, RegisterRequest } from \"../models/user.model\"\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  private apiUrl = \"http://localhost:8080/auth\"\n  private currentUserSubject = new BehaviorSubject<any>(null)\n  public currentUser$ = this.currentUserSubject.asObservable()\n\n  constructor(private http: HttpClient) {\n    this.loadCurrentUser()\n  }\n\n  login(credentials: LoginRequest): Observable<LoginResponse> {\n    return this.http.post<LoginResponse>(`${this.apiUrl}/signin`, credentials).pipe(\n      tap((response) => {\n        localStorage.setItem(\"token\", response.token)\n        localStorage.setItem(\n          \"user\",\n          JSON.stringify({\n            usuario: response.usuario,\n            email: response.email,\n            role: response.role,\n          }),\n        )\n        this.currentUserSubject.next({\n          usuario: response.usuario,\n          email: response.email,\n          role: response.role,\n        })\n      }),\n    )\n  }\n\n  register(userData: RegisterRequest): Observable<any> {\n    return this.http.post(`${this.apiUrl}/signup`, userData)\n  }\n\n  logout(): void {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user\")\n    this.currentUserSubject.next(null)\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem(\"token\")\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.getToken()\n  }\n\n  isAdmin(): boolean {\n    const user = this.getCurrentUser()\n    return user && user.role === \"ADMIN\"\n  }\n\n  getCurrentUser(): any {\n    return this.currentUserSubject.value\n  }\n\n  private loadCurrentUser(): void {\n    const userStr = localStorage.getItem(\"user\")\n    if (userStr) {\n      this.currentUserSubject.next(JSON.parse(userStr))\n    }\n  }\n\n  getAuthHeaders(): any {\n    const token = this.getToken()\n    return token ? { Authorization: `Bearer ${token}` } : {}\n  }\n}\n"],"mappings":"AAEA,SAA0BA,eAAe,QAAQ,MAAM;AACvD,SAASC,GAAG,QAAQ,gBAAgB;;;AAMpC,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,MAAM,GAAG,4BAA4B;IACrC,KAAAC,kBAAkB,GAAG,IAAIN,eAAe,CAAM,IAAI,CAAC;IACpD,KAAAO,YAAY,GAAG,IAAI,CAACD,kBAAkB,CAACE,YAAY,EAAE;IAG1D,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAC,KAAKA,CAACC,WAAyB;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAgB,GAAG,IAAI,CAACP,MAAM,SAAS,EAAEM,WAAW,CAAC,CAACE,IAAI,CAC7EZ,GAAG,CAAEa,QAAQ,IAAI;MACfC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAACG,KAAK,CAAC;MAC7CF,YAAY,CAACC,OAAO,CAClB,MAAM,EACNE,IAAI,CAACC,SAAS,CAAC;QACbC,OAAO,EAAEN,QAAQ,CAACM,OAAO;QACzBC,KAAK,EAAEP,QAAQ,CAACO,KAAK;QACrBC,IAAI,EAAER,QAAQ,CAACQ;OAChB,CAAC,CACH;MACD,IAAI,CAAChB,kBAAkB,CAACiB,IAAI,CAAC;QAC3BH,OAAO,EAAEN,QAAQ,CAACM,OAAO;QACzBC,KAAK,EAAEP,QAAQ,CAACO,KAAK;QACrBC,IAAI,EAAER,QAAQ,CAACQ;OAChB,CAAC;IACJ,CAAC,CAAC,CACH;EACH;EAEAE,QAAQA,CAACC,QAAyB;IAChC,OAAO,IAAI,CAACrB,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,SAAS,EAAEoB,QAAQ,CAAC;EAC1D;EAEAC,MAAMA,CAAA;IACJX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCZ,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACrB,kBAAkB,CAACiB,IAAI,CAAC,IAAI,CAAC;EACpC;EAEAK,QAAQA,CAAA;IACN,OAAOb,YAAY,CAACc,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,eAAeA,CAAA;IACb,OAAO,CAAC,CAAC,IAAI,CAACF,QAAQ,EAAE;EAC1B;EAEAG,OAAOA,CAAA;IACL,MAAMC,IAAI,GAAG,IAAI,CAACC,cAAc,EAAE;IAClC,OAAOD,IAAI,IAAIA,IAAI,CAACV,IAAI,KAAK,OAAO;EACtC;EAEAW,cAAcA,CAAA;IACZ,OAAO,IAAI,CAAC3B,kBAAkB,CAAC4B,KAAK;EACtC;EAEQzB,eAAeA,CAAA;IACrB,MAAM0B,OAAO,GAAGpB,YAAY,CAACc,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAIM,OAAO,EAAE;MACX,IAAI,CAAC7B,kBAAkB,CAACiB,IAAI,CAACL,IAAI,CAACkB,KAAK,CAACD,OAAO,CAAC,CAAC;IACnD;EACF;EAEAE,cAAcA,CAAA;IACZ,MAAMpB,KAAK,GAAG,IAAI,CAACW,QAAQ,EAAE;IAC7B,OAAOX,KAAK,GAAG;MAAEqB,aAAa,EAAE,UAAUrB,KAAK;IAAE,CAAE,GAAG,EAAE;EAC1D;;;uBAnEWf,WAAW,EAAAqC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXxC,WAAW;MAAAyC,OAAA,EAAXzC,WAAW,CAAA0C,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}