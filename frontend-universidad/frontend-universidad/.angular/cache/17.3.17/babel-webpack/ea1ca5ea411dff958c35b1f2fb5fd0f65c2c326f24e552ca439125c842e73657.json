{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nlet DirectorCarreraComponent = class DirectorCarreraComponent {\n  constructor(directorService, router) {\n    this.directorService = directorService;\n    this.router = router;\n    this.directores = [];\n    this.loading = false;\n    this.showForm = false;\n    this.editMode = false;\n    this.currentDirector = this.getEmptyDirector();\n    this.editId = null;\n    this.message = \"\";\n    this.messageType = \"\";\n  }\n  ngOnInit() {\n    this.loadDirectores();\n  }\n  getEmptyDirector() {\n    return {\n      nombre: \"\",\n      apellido: \"\",\n      correo: \"\",\n      codigoDirector: \"\",\n      carrera: \"\",\n      facultad: \"\",\n      titulo: \"\",\n      telefono: \"\",\n      oficina: \"\",\n      fechaInicio: \"\"\n    };\n  }\n  loadDirectores() {\n    this.loading = true;\n    this.directorService.getAll().subscribe({\n      next: data => {\n        this.directores = data;\n        this.loading = false;\n      },\n      error: error => {\n        console.error(\"Error al cargar directores:\", error);\n        this.showMessage(\"Error al cargar directores de carrera\", \"error\");\n        this.loading = false;\n      }\n    });\n  }\n  showCreateForm() {\n    this.showForm = true;\n    this.editMode = false;\n    this.currentDirector = this.getEmptyDirector();\n    this.editId = null;\n  }\n  showEditForm(director) {\n    this.showForm = true;\n    this.editMode = true;\n    this.editId = director.id;\n    this.currentDirector = {\n      nombre: director.nombre,\n      apellido: director.apellido,\n      correo: director.correo,\n      codigoDirector: director.codigoDirector,\n      carrera: director.carrera,\n      facultad: director.facultad,\n      titulo: director.titulo,\n      telefono: director.telefono,\n      oficina: director.oficina,\n      fechaInicio: director.fechaInicio\n    };\n  }\n  hideForm() {\n    this.showForm = false;\n    this.editMode = false;\n    this.currentDirector = this.getEmptyDirector();\n    this.editId = null;\n  }\n  onSubmit() {\n    if (!this.isFormValid()) {\n      this.showMessage(\"Por favor complete todos los campos obligatorios\", \"error\");\n      return;\n    }\n    this.loading = true;\n    if (this.editMode && this.editId) {\n      this.directorService.update(this.editId, this.currentDirector).subscribe({\n        next: response => {\n          this.showMessage(\"Director de carrera actualizado exitosamente\", \"success\");\n          this.loadDirectores();\n          this.hideForm();\n          this.loading = false;\n        },\n        error: error => {\n          console.error(\"Error al actualizar director:\", error);\n          this.showMessage(\"Error al actualizar director de carrera\", \"error\");\n          this.loading = false;\n        }\n      });\n    } else {\n      this.directorService.create(this.currentDirector).subscribe({\n        next: response => {\n          this.showMessage(\"Director de carrera creado exitosamente\", \"success\");\n          this.loadDirectores();\n          this.hideForm();\n          this.loading = false;\n        },\n        error: error => {\n          console.error(\"Error al crear director:\", error);\n          this.showMessage(\"Error al crear director de carrera\", \"error\");\n          this.loading = false;\n        }\n      });\n    }\n  }\n  deleteDirector(id) {\n    if (confirm(\"¿Está seguro de que desea eliminar este director de carrera?\")) {\n      this.loading = true;\n      this.directorService.delete(id).subscribe({\n        next: response => {\n          this.showMessage(\"Director de carrera eliminado exitosamente\", \"success\");\n          this.loadDirectores();\n          this.loading = false;\n        },\n        error: error => {\n          console.error(\"Error al eliminar director:\", error);\n          this.showMessage(\"Error al eliminar director de carrera\", \"error\");\n          this.loading = false;\n        }\n      });\n    }\n  }\n  isFormValid() {\n    return !!(this.currentDirector.nombre && this.currentDirector.apellido && this.currentDirector.correo && this.currentDirector.codigoDirector && this.currentDirector.carrera && this.currentDirector.facultad);\n  }\n  showMessage(message, type) {\n    this.message = message;\n    this.messageType = type;\n    setTimeout(() => {\n      this.message = \"\";\n      this.messageType = \"\";\n    }, 5000);\n  }\n  goBack() {\n    this.router.navigate([\"/dashboard\"]);\n  }\n};\nDirectorCarreraComponent = __decorate([Component({\n  selector: \"app-director-carrera\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: \"./director-carrera.component.html\",\n  styleUrls: [\"./director-carrera.component.css\"]\n})], DirectorCarreraComponent);\nexport { DirectorCarreraComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","DirectorCarreraComponent","constructor","directorService","router","directores","loading","showForm","editMode","currentDirector","getEmptyDirector","editId","message","messageType","ngOnInit","loadDirectores","nombre","apellido","correo","codigoDirector","carrera","facultad","titulo","telefono","oficina","fechaInicio","getAll","subscribe","next","data","error","console","showMessage","showCreateForm","showEditForm","director","id","hideForm","onSubmit","isFormValid","update","response","create","deleteDirector","confirm","delete","type","setTimeout","goBack","navigate","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\SantiagoGamer\\Downloads\\frontend-universidad\\src\\app\\components\\director-carrera\\director-carrera.component.ts"],"sourcesContent":["import { Component, type OnInit } from \"@angular/core\"\nimport { CommonModule } from \"@angular/common\"\nimport { FormsModule } from \"@angular/forms\"\nimport type { Router } from \"@angular/router\"\nimport type { DirectorCarreraService } from \"../../services/director-carrera.service\"\nimport type { DirectorCarrera, DirectorCarreraRequest } from \"../../models/director-carrera.model\"\n\n@Component({\n  selector: \"app-director-carrera\",\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: \"./director-carrera.component.html\",\n  styleUrls: [\"./director-carrera.component.css\"],\n})\nexport class DirectorCarreraComponent implements OnInit {\n  directores: DirectorCarrera[] = []\n  loading = false\n  showForm = false\n  editMode = false\n  currentDirector: DirectorCarreraRequest = this.getEmptyDirector()\n  editId: number | null = null\n  message = \"\"\n  messageType = \"\"\n\n  constructor(\n    private directorService: DirectorCarreraService,\n    private router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.loadDirectores()\n  }\n\n  getEmptyDirector(): DirectorCarreraRequest {\n    return {\n      nombre: \"\",\n      apellido: \"\",\n      correo: \"\",\n      codigoDirector: \"\",\n      carrera: \"\",\n      facultad: \"\",\n      titulo: \"\",\n      telefono: \"\",\n      oficina: \"\",\n      fechaInicio: \"\",\n    }\n  }\n\n  loadDirectores(): void {\n    this.loading = true\n    this.directorService.getAll().subscribe({\n      next: (data) => {\n        this.directores = data\n        this.loading = false\n      },\n      error: (error) => {\n        console.error(\"Error al cargar directores:\", error)\n        this.showMessage(\"Error al cargar directores de carrera\", \"error\")\n        this.loading = false\n      },\n    })\n  }\n\n  showCreateForm(): void {\n    this.showForm = true\n    this.editMode = false\n    this.currentDirector = this.getEmptyDirector()\n    this.editId = null\n  }\n\n  showEditForm(director: DirectorCarrera): void {\n    this.showForm = true\n    this.editMode = true\n    this.editId = director.id!\n    this.currentDirector = {\n      nombre: director.nombre,\n      apellido: director.apellido,\n      correo: director.correo,\n      codigoDirector: director.codigoDirector,\n      carrera: director.carrera,\n      facultad: director.facultad,\n      titulo: director.titulo,\n      telefono: director.telefono,\n      oficina: director.oficina,\n      fechaInicio: director.fechaInicio,\n    }\n  }\n\n  hideForm(): void {\n    this.showForm = false\n    this.editMode = false\n    this.currentDirector = this.getEmptyDirector()\n    this.editId = null\n  }\n\n  onSubmit(): void {\n    if (!this.isFormValid()) {\n      this.showMessage(\"Por favor complete todos los campos obligatorios\", \"error\")\n      return\n    }\n\n    this.loading = true\n\n    if (this.editMode && this.editId) {\n      this.directorService.update(this.editId, this.currentDirector).subscribe({\n        next: (response) => {\n          this.showMessage(\"Director de carrera actualizado exitosamente\", \"success\")\n          this.loadDirectores()\n          this.hideForm()\n          this.loading = false\n        },\n        error: (error) => {\n          console.error(\"Error al actualizar director:\", error)\n          this.showMessage(\"Error al actualizar director de carrera\", \"error\")\n          this.loading = false\n        },\n      })\n    } else {\n      this.directorService.create(this.currentDirector).subscribe({\n        next: (response) => {\n          this.showMessage(\"Director de carrera creado exitosamente\", \"success\")\n          this.loadDirectores()\n          this.hideForm()\n          this.loading = false\n        },\n        error: (error) => {\n          console.error(\"Error al crear director:\", error)\n          this.showMessage(\"Error al crear director de carrera\", \"error\")\n          this.loading = false\n        },\n      })\n    }\n  }\n\n  deleteDirector(id: number): void {\n    if (confirm(\"¿Está seguro de que desea eliminar este director de carrera?\")) {\n      this.loading = true\n      this.directorService.delete(id).subscribe({\n        next: (response) => {\n          this.showMessage(\"Director de carrera eliminado exitosamente\", \"success\")\n          this.loadDirectores()\n          this.loading = false\n        },\n        error: (error) => {\n          console.error(\"Error al eliminar director:\", error)\n          this.showMessage(\"Error al eliminar director de carrera\", \"error\")\n          this.loading = false\n        },\n      })\n    }\n  }\n\n  isFormValid(): boolean {\n    return !!(\n      this.currentDirector.nombre &&\n      this.currentDirector.apellido &&\n      this.currentDirector.correo &&\n      this.currentDirector.codigoDirector &&\n      this.currentDirector.carrera &&\n      this.currentDirector.facultad\n    )\n  }\n\n  showMessage(message: string, type: string): void {\n    this.message = message\n    this.messageType = type\n    setTimeout(() => {\n      this.message = \"\"\n      this.messageType = \"\"\n    }, 5000)\n  }\n\n  goBack(): void {\n    this.router.navigate([\"/dashboard\"])\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAqB,eAAe;AACtD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAYrC,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAUnCC,YACUC,eAAuC,EACvCC,MAAc;IADd,KAAAD,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IAXhB,KAAAC,UAAU,GAAsB,EAAE;IAClC,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,QAAQ,GAAG,KAAK;IAChB,KAAAC,QAAQ,GAAG,KAAK;IAChB,KAAAC,eAAe,GAA2B,IAAI,CAACC,gBAAgB,EAAE;IACjE,KAAAC,MAAM,GAAkB,IAAI;IAC5B,KAAAC,OAAO,GAAG,EAAE;IACZ,KAAAC,WAAW,GAAG,EAAE;EAKb;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAL,gBAAgBA,CAAA;IACd,OAAO;MACLM,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,cAAc,EAAE,EAAE;MAClBC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE;KACd;EACH;EAEAV,cAAcA,CAAA;IACZ,IAAI,CAACT,OAAO,GAAG,IAAI;IACnB,IAAI,CAACH,eAAe,CAACuB,MAAM,EAAE,CAACC,SAAS,CAAC;MACtCC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACxB,UAAU,GAAGwB,IAAI;QACtB,IAAI,CAACvB,OAAO,GAAG,KAAK;MACtB,CAAC;MACDwB,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD,IAAI,CAACE,WAAW,CAAC,uCAAuC,EAAE,OAAO,CAAC;QAClE,IAAI,CAAC1B,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;EAEA2B,cAAcA,CAAA;IACZ,IAAI,CAAC1B,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,eAAe,GAAG,IAAI,CAACC,gBAAgB,EAAE;IAC9C,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAEAuB,YAAYA,CAACC,QAAyB;IACpC,IAAI,CAAC5B,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACG,MAAM,GAAGwB,QAAQ,CAACC,EAAG;IAC1B,IAAI,CAAC3B,eAAe,GAAG;MACrBO,MAAM,EAAEmB,QAAQ,CAACnB,MAAM;MACvBC,QAAQ,EAAEkB,QAAQ,CAAClB,QAAQ;MAC3BC,MAAM,EAAEiB,QAAQ,CAACjB,MAAM;MACvBC,cAAc,EAAEgB,QAAQ,CAAChB,cAAc;MACvCC,OAAO,EAAEe,QAAQ,CAACf,OAAO;MACzBC,QAAQ,EAAEc,QAAQ,CAACd,QAAQ;MAC3BC,MAAM,EAAEa,QAAQ,CAACb,MAAM;MACvBC,QAAQ,EAAEY,QAAQ,CAACZ,QAAQ;MAC3BC,OAAO,EAAEW,QAAQ,CAACX,OAAO;MACzBC,WAAW,EAAEU,QAAQ,CAACV;KACvB;EACH;EAEAY,QAAQA,CAAA;IACN,IAAI,CAAC9B,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,eAAe,GAAG,IAAI,CAACC,gBAAgB,EAAE;IAC9C,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAEA2B,QAAQA,CAAA;IACN,IAAI,CAAC,IAAI,CAACC,WAAW,EAAE,EAAE;MACvB,IAAI,CAACP,WAAW,CAAC,kDAAkD,EAAE,OAAO,CAAC;MAC7E;IACF;IAEA,IAAI,CAAC1B,OAAO,GAAG,IAAI;IAEnB,IAAI,IAAI,CAACE,QAAQ,IAAI,IAAI,CAACG,MAAM,EAAE;MAChC,IAAI,CAACR,eAAe,CAACqC,MAAM,CAAC,IAAI,CAAC7B,MAAM,EAAE,IAAI,CAACF,eAAe,CAAC,CAACkB,SAAS,CAAC;QACvEC,IAAI,EAAGa,QAAQ,IAAI;UACjB,IAAI,CAACT,WAAW,CAAC,8CAA8C,EAAE,SAAS,CAAC;UAC3E,IAAI,CAACjB,cAAc,EAAE;UACrB,IAAI,CAACsB,QAAQ,EAAE;UACf,IAAI,CAAC/B,OAAO,GAAG,KAAK;QACtB,CAAC;QACDwB,KAAK,EAAGA,KAAK,IAAI;UACfC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrD,IAAI,CAACE,WAAW,CAAC,yCAAyC,EAAE,OAAO,CAAC;UACpE,IAAI,CAAC1B,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAACH,eAAe,CAACuC,MAAM,CAAC,IAAI,CAACjC,eAAe,CAAC,CAACkB,SAAS,CAAC;QAC1DC,IAAI,EAAGa,QAAQ,IAAI;UACjB,IAAI,CAACT,WAAW,CAAC,yCAAyC,EAAE,SAAS,CAAC;UACtE,IAAI,CAACjB,cAAc,EAAE;UACrB,IAAI,CAACsB,QAAQ,EAAE;UACf,IAAI,CAAC/B,OAAO,GAAG,KAAK;QACtB,CAAC;QACDwB,KAAK,EAAGA,KAAK,IAAI;UACfC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChD,IAAI,CAACE,WAAW,CAAC,oCAAoC,EAAE,OAAO,CAAC;UAC/D,IAAI,CAAC1B,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;IACJ;EACF;EAEAqC,cAAcA,CAACP,EAAU;IACvB,IAAIQ,OAAO,CAAC,8DAA8D,CAAC,EAAE;MAC3E,IAAI,CAACtC,OAAO,GAAG,IAAI;MACnB,IAAI,CAACH,eAAe,CAAC0C,MAAM,CAACT,EAAE,CAAC,CAACT,SAAS,CAAC;QACxCC,IAAI,EAAGa,QAAQ,IAAI;UACjB,IAAI,CAACT,WAAW,CAAC,4CAA4C,EAAE,SAAS,CAAC;UACzE,IAAI,CAACjB,cAAc,EAAE;UACrB,IAAI,CAACT,OAAO,GAAG,KAAK;QACtB,CAAC;QACDwB,KAAK,EAAGA,KAAK,IAAI;UACfC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;UACnD,IAAI,CAACE,WAAW,CAAC,uCAAuC,EAAE,OAAO,CAAC;UAClE,IAAI,CAAC1B,OAAO,GAAG,KAAK;QACtB;OACD,CAAC;IACJ;EACF;EAEAiC,WAAWA,CAAA;IACT,OAAO,CAAC,EACN,IAAI,CAAC9B,eAAe,CAACO,MAAM,IAC3B,IAAI,CAACP,eAAe,CAACQ,QAAQ,IAC7B,IAAI,CAACR,eAAe,CAACS,MAAM,IAC3B,IAAI,CAACT,eAAe,CAACU,cAAc,IACnC,IAAI,CAACV,eAAe,CAACW,OAAO,IAC5B,IAAI,CAACX,eAAe,CAACY,QAAQ,CAC9B;EACH;EAEAW,WAAWA,CAACpB,OAAe,EAAEkC,IAAY;IACvC,IAAI,CAAClC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,WAAW,GAAGiC,IAAI;IACvBC,UAAU,CAAC,MAAK;MACd,IAAI,CAACnC,OAAO,GAAG,EAAE;MACjB,IAAI,CAACC,WAAW,GAAG,EAAE;IACvB,CAAC,EAAE,IAAI,CAAC;EACV;EAEAmC,MAAMA,CAAA;IACJ,IAAI,CAAC5C,MAAM,CAAC6C,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;CACD;AAjKYhD,wBAAwB,GAAAiD,UAAA,EAPpCpD,SAAS,CAAC;EACTqD,QAAQ,EAAE,sBAAsB;EAChCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACtD,YAAY,EAAEC,WAAW,CAAC;EACpCsD,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACWtD,wBAAwB,CAiKpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}