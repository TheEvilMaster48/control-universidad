{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpHeaders } from \"@angular/common/http\";\nlet ProfesorService = class ProfesorService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = \"http://localhost:8080/api/profesores\";\n  }\n  getHeaders() {\n    return new HttpHeaders(this.authService.getAuthHeaders());\n  }\n  getAll() {\n    return this.http.get(this.apiUrl, {\n      headers: this.getHeaders()\n    });\n  }\n  getById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n  create(profesor) {\n    return this.http.post(this.apiUrl, profesor, {\n      headers: this.getHeaders()\n    });\n  }\n  update(id, profesor) {\n    return this.http.put(`${this.apiUrl}/${id}`, profesor, {\n      headers: this.getHeaders()\n    });\n  }\n  delete(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      headers: this.getHeaders()\n    });\n  }\n};\nProfesorService = __decorate([Injectable({\n  providedIn: \"root\"\n})], ProfesorService);\nexport { ProfesorService };","map":{"version":3,"names":["Injectable","HttpHeaders","ProfesorService","constructor","http","authService","apiUrl","getHeaders","getAuthHeaders","getAll","get","headers","getById","id","create","profesor","post","update","put","delete","__decorate","providedIn"],"sources":["C:\\Users\\SantiagoGamer\\Downloads\\frontend-universidad\\src\\app\\services\\profesor.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\"\nimport { Observable } from \"rxjs\"\nimport { Profesor, ProfesorRequest } from \"../models/profesor.model\"\nimport type { AuthService } from \"./auth.service\"\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProfesorService {\n  private apiUrl = \"http://localhost:8080/api/profesores\"\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {}\n\n  private getHeaders(): HttpHeaders {\n    return new HttpHeaders(this.authService.getAuthHeaders())\n  }\n\n  getAll(): Observable<Profesor[]> {\n    return this.http.get<Profesor[]>(this.apiUrl, { headers: this.getHeaders() })\n  }\n\n  getById(id: number): Observable<Profesor> {\n    return this.http.get<Profesor>(`${this.apiUrl}/${id}`, { headers: this.getHeaders() })\n  }\n\n  create(profesor: ProfesorRequest): Observable<Profesor> {\n    return this.http.post<Profesor>(this.apiUrl, profesor, { headers: this.getHeaders() })\n  }\n\n  update(id: number, profesor: ProfesorRequest): Observable<Profesor> {\n    return this.http.put<Profesor>(`${this.apiUrl}/${id}`, profesor, { headers: this.getHeaders() })\n  }\n\n  delete(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/${id}`, { headers: this.getHeaders() })\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAAqBC,WAAW,QAAQ,sBAAsB;AAQvD,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAG1BC,YACUC,IAAgB,EAChBC,WAAwB;IADxB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,WAAW,GAAXA,WAAW;IAJb,KAAAC,MAAM,GAAG,sCAAsC;EAKpD;EAEKC,UAAUA,CAAA;IAChB,OAAO,IAAIN,WAAW,CAAC,IAAI,CAACI,WAAW,CAACG,cAAc,EAAE,CAAC;EAC3D;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,IAAI,CAACJ,MAAM,EAAE;MAAEK,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EAC/E;EAEAK,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACT,IAAI,CAACM,GAAG,CAAW,GAAG,IAAI,CAACJ,MAAM,IAAIO,EAAE,EAAE,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EACxF;EAEAO,MAAMA,CAACC,QAAyB;IAC9B,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAW,IAAI,CAACV,MAAM,EAAES,QAAQ,EAAE;MAAEJ,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EACxF;EAEAU,MAAMA,CAACJ,EAAU,EAAEE,QAAyB;IAC1C,OAAO,IAAI,CAACX,IAAI,CAACc,GAAG,CAAW,GAAG,IAAI,CAACZ,MAAM,IAAIO,EAAE,EAAE,EAAEE,QAAQ,EAAE;MAAEJ,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EAClG;EAEAY,MAAMA,CAACN,EAAU;IACf,OAAO,IAAI,CAACT,IAAI,CAACe,MAAM,CAAC,GAAG,IAAI,CAACb,MAAM,IAAIO,EAAE,EAAE,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACJ,UAAU;IAAE,CAAE,CAAC;EACjF;CACD;AA/BYL,eAAe,GAAAkB,UAAA,EAH3BpB,UAAU,CAAC;EACVqB,UAAU,EAAE;CACb,CAAC,C,EACWnB,eAAe,CA+B3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}